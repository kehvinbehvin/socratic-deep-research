version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d myapp"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - backend

  elasticmq:
    image: softwaremill/elasticmq-native
    ports:
      - "9324:9324"
      - "9325:9325"
    volumes:
      - ./queue-config/elasticmq.conf:/opt/elasticmq.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9324"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=myapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - QUEUE_ENDPOINT=http://elasticmq:9324
      - QUEUE_REGION=elasticmq
      - QUEUE_ACCESS_KEY_ID=root
      - QUEUE_SECRET_ACCESS_KEY=root
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      elasticmq:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: 